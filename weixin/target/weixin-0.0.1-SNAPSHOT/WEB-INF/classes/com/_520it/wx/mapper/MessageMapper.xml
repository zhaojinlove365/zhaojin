<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wx.mapper.MessageMapper">
    <resultMap id="BaseResultMap" type="com._520it.wx.domain.Message">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="receiveContent" property="receivecontent" jdbcType="VARCHAR"/>
        <result column="replyContent" property="replycontent" jdbcType="VARCHAR"/>
        <result column="type" property="type"/>
        <result column="inputTime" property="inputtime" jdbcType="TIMESTAMP"/>
        <association property="client" column="client" columnPrefix="client_" javaType="com._520it.wx.domain.Client"
                     select="com._520it.wx.mapper.ClientMapper.selectByPrimaryKey">
            <id column="id" property="id"></id>
            <result column="name" property="name"></result>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from message
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com._520it.wx.domain.Message" useGeneratedKeys="true" keyProperty="id">
    insert into message (client_id, receiveContent, replyContent,type, inputTime)
    values (#{client.id,jdbcType=BIGINT}, #{receivecontent,jdbcType=VARCHAR}, #{replycontent,jdbcType=VARCHAR},#{type}, #{inputtime,jdbcType=TIMESTAMP})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com._520it.wx.domain.Message">
    update message
    set client_id = #{client.id,jdbcType=BIGINT},
      receiveContent = #{receivecontent,jdbcType=VARCHAR},
      replyContent = #{replycontent,jdbcType=VARCHAR},
      type = #{type},
      inputTime = #{inputtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, client_id, receiveContent, replyContent, type, inputTime
    from message
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, client_id, receiveContent, replyContent, type, inputTime
    from message
  </select>
    <sql id="where_sql">
        <where>
            <if test="name!=null and name!=''">
                and client_name like concat('%',#{name},'%')
            </if>
            <if test="beginTime!=null">
                and inputTime &gt; #{beginTime}
            </if>
            <if test="endTime!=null">
                and inputTime &lt; #{endTime}
            </if>
            <if test="type!=null">
                and type=#{type}
            </if>
        </where>
    </sql>
    <select id="getTotalCount" resultType="java.lang.Integer">
        select count(*) from message
        <include refid="where_sql"></include>
    </select>
    <select id="getListData" resultMap="BaseResultMap">
        select * from message
        <include refid="where_sql"></include>
        limit #{start},#{rows}
    </select>
</mapper>